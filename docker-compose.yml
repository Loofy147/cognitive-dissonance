version: '3.8'
services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - meta_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      retries: 5

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - minio_data:/data

  proposer:
    build:
      context: .
      dockerfile: services/proposer/Dockerfile
    env_file: ./.env
    volumes:
      - ./services/models:/app/models
    environment:
      - PROPOSER_MODEL_PATH=/app/models/proposer.pkl
    ports:
      - 8001:8000
    depends_on:
      - postgres

  critic:
    build:
      context: .
      dockerfile: services/critic/Dockerfile
    env_file: ./.env
    volumes:
      - ./services/models:/app/models
    environment:
      - CRITIC_MODEL_PATH=/app/models/critic.pkl
    ports:
      - 8002:8000
    depends_on:
      - proposer

  evaluator:
    build:
      context: .
      dockerfile: services/evaluator/Dockerfile
    env_file: ./.env
    environment:
      - PROPOSER_URL=http://proposer:8000/predict
      - CRITIC_URL=http://critic:8000/contradict
      - LEARNER_URL=http://learner:8000/update
      - SAFETY_URL=http://safety-gate:8000/check
    ports:
      - 8003:8000
    depends_on:
      - proposer
      - critic
      - learner

  learner:
    build:
      context: .
      dockerfile: services/learner/Dockerfile
    env_file: ./.env
    ports:
      - 8004:8000
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    depends_on:
      - postgres
      - mlflow

  meta-controller:
    build:
      context: .
      dockerfile: services/meta_controller/Dockerfile
    env_file: ./.env
    volumes:
      - ./services/policy:/data
    environment:
      - D_TARGET=0.12
      - LAMBDA_MAX=0.05
      - KL_EPS=0.02
      - D_BUDGET_PER_HOUR=100
      - POLICY_FILE_PATH=/data/policy.json
    ports:
      - 8005:8000
    depends_on:
      - postgres

  safety-gate:
    build:
      context: .
      dockerfile: services/safety_gate/Dockerfile
    env_file: ./.env
    environment:
      - MAX_DISSONANCE=0.5
    ports:
      - 8006:8000
    depends_on:
      - meta-controller

  auditor:
    build:
      context: .
      dockerfile: services/auditor/Dockerfile
    env_file: ./.env
    volumes:
      - ./services/models:/app/models
    ports:
      - 8007:8000

volumes:
  meta_db_data:
  minio_data:

  mlflow:
    build:
      context: .
      dockerfile: services/mlflow/Dockerfile
    ports:
      - "5000:5000"
    environment:
      - AWS_ACCESS_KEY_ID=${MINIO_ACCESS_KEY}
      - AWS_SECRET_ACCESS_KEY=${MINIO_SECRET_KEY}
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
    command: >
      mlflow server
      --host 0.0.0.0
      --port 5000
      --backend-store-uri postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      --default-artifact-root s3://mlflow/
    depends_on:
      - postgres
      - minio